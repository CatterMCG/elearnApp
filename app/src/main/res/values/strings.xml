<resources>
    <string name="app_name">My Application</string>
    <string name="action_settings">Settings</string>
    <string name="data_structure_tips">1.分清数据、数据元素、数据对象之间的关系 \n2.数据结构的三要素：逻辑结构、存储结构、运算 \n3.算法5个特性：有穷性、确定性、可行性、输入、输出 \n4.线性表是逻辑结构，顺序表和链式表是存储结构。数据结构中的存储结构有：顺序存储、链式存储、索引存储、散列存储\n5.顺序表可以随机访问，插入和删除需要大量移动元素；链式表不支持随机访问，需要从前往后依次读取，添加和删除很方便，修改前去和后继就行。\n6.经常对第一个元素或最后一个元素进程操作多采用“带头结点的双循环链表”\n7.队列是一种先进先出的线性表，循环队列中判断队空的条件是：front = rear,判断队满的条件为(rear+1)%m=front（其中front首指针，rear尾指针，m队长）；栈是一种后进先出的线性表。\n8.对于n个不同的元素进栈，出站顺序的个数为(2n)!/((n+1)n!n!)\n9.满二叉树深度为k，则有2^k-1个结点；非空二叉树中，结点n=n0+n1+n2,分支n-1=2n2+n1,则n0=n2+1；n个结点的完全二叉树深度为logN +1（取下整)；在含有n个结点的二叉链表中含有n+1个空链域；高度为h的m叉树至多有（m^h-1）/(m-1)个结点\n10.前序遍历和中序遍历的关系就好像，按前序入栈，按中序出栈；要想构成一个完整的二叉树，必须要有中序遍历\n11.对于n个顶点e条边，①采用邻接表，DFS和BFS的时间复杂度和空间复杂度都分别为O(n+e)和O(n)；②采用邻接矩阵，他们的时间复杂度和空间复杂度都是O(n^2)和O(n^2)\n12.BFS相当于树的层次遍历，DFS相当于树的先序遍历；BFS用队列实现，DFS用栈实现\n13.分清楚连通、连通图、连通分量、极大连通子图、强连通图、强连通分量、完全图的区别\n12.顶点不重复出现的路径叫简单路径\n14.B+树中叶结点之间通过指针链接，B树没有；B+树中结点的子树个数与关键字相同。\n15.快排中每当枢轴都把表等分为长度相近的两个字表的时候速度最快，当表中已经有序或者逆序的时候速度最慢\n16.排序的趟数与初始状态无关的排序有：直接插入、简单选择、基数排序\n17.稳定的内部排序有：直接插入排序、冒泡排序、2路归并排序、基数排序；不稳定的内部排序有：简单选择排序、希尔排序、快速排序、堆排序\n18.在做矩阵的存储的时候，请注意矩阵的下标、数组的下标、按行存储还是按列存储，都有看给你下套哦\n19.有n个权值，构造哈弗曼树的时候，有2n-1个结点\n20.折半查找成功或者不成功最多都不超过h=logn+1(取下整)</string>
</resources>
